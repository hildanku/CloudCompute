version: "3.2" # menggunakan docker-compose versi 3.2
services: # mendefinisikan service apa yang ingin dideploy

  order-service:
    image: ghcr.io/hildanku/order-service:latest # menggunakan image hasil build dari Dockerfile
    container_name: 'order-service' # memberi nama container
    ports: # mengekspos port 3000
      - "3000:3000"
    depends_on: # memastikan sebelum running container ini, service rabbitmq harus running terlebih dahulu
      - rabbitmq
    environment: # mengkonfigurasi environment variabel
      AMQP_URL: amqp://guest:guest@rabbitmq:5672
    networks: # menghubungkan container kedalam network rabbitmq_network
      - rabbitmq_network
    restart: always # restart ketika container crash

  shipping-service:
    image: ghcr.io/hildanku/shipping-service:latest
    container_name: 'shipping-service'
    ports:
      - "3001:3001"
    environment:
      AMQP_URL: amqp://guest:guest@rabbitmq:5672
    networks:
      - rabbitmq_network

  # shipping-service:
  #   image: ghcr.io/hildanku/shipping-service:latest # menggunakan image hasil build dari Dockerfile
  #   container_name: 'shipping-service' # memberi nama container
  #   ports: # mengekspos port 3001
  #     - "3001:3001"
  #   depends_on: # memastikan sebelum running container ini, service rabbitmq harus running terlebih dahulu
  #     - rabbitmq
  #   environment: # mengkonfigurasi environment variabel
  #     AMQP_URL: amqp://guest:guest@rabbitmq:5672
  #   networks: # menghubungkan container kedalam network rabbitmq_network
  #     - rabbitmq_network
  #   restart: always # restart ketika container crash

  rabbitmq:
    image: rabbitmq:3.11-management # menggunakan image hasil pull dari dockerhub
    container_name: 'rabbitmq-server' # memberi nama container
    ports: # mengekspos port
        - 5672:5672 # 5672:5672 adalah port internal/private dari system si rabbitmq
        - 15672:15672 # 15672:15672 adalah port public yang nantinya digunakan untuk mengakses si rabbitmq-management
    volumes: # memakai volume
        - rabbitmq_data:/var/lib/rabbitmq/ # memakai volume rabbitmq_data yang menampung /var/lib/rabbitmq
        - rabbitmq_log:/var/log/rabbitmq # memakai volume rabbitmq_log yang menampung var/log/rabbitmq
    networks: # menhubungkan container ke rabbitm
        - rabbitmq_network
    restart: always # restart ketika container crash

volumes:
  rabbitmq_data: # membuat volume rabbitmq_data
    name: rabbitmq_data # memberi nama volume  
  rabbitmq_log: # membuat volume rabbitmq_log
    name: rabbitmq_log # memberi nama volume

networks:
  rabbitmq_network: # membuat network rabbitmq_network
  # membuat network rabbitmq_network
    name: rabbitmq_network # memberi nama networknya apa
    driver: bridge # dengan driver bridge, agar setiap container bisa saling terkoneksi
